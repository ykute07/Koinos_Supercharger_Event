"use strict";
/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.newStableTokenRegistry = exports.ABI = void 0;
exports.ABI = [
    {
        inputs: [{ internalType: 'bool', name: 'test', type: 'bool' }],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        constant: true,
        inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        name: 'fiatTickers',
        outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'initialized',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'isOwner',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'owner',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
        name: 'stableTokens',
        outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'getVersionNumber',
        outputs: [
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        payable: false,
        stateMutability: 'pure',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { internalType: 'bytes', name: 'fiatTicker', type: 'bytes' },
            { internalType: 'bytes', name: 'stableTokenContractName', type: 'bytes' },
        ],
        name: 'initialize',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'getContractInstances',
        outputs: [
            { internalType: 'bytes', name: '', type: 'bytes' },
            { internalType: 'uint256[]', name: '', type: 'uint256[]' },
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { internalType: 'bytes', name: 'fiatTicker', type: 'bytes' },
            { internalType: 'uint256', name: 'index', type: 'uint256' },
        ],
        name: 'removeStableToken',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { internalType: 'bytes', name: 'fiatTicker', type: 'bytes' },
            { internalType: 'bytes', name: 'stableTokenContractName', type: 'bytes' },
        ],
        name: 'addNewStableToken',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ internalType: 'bytes', name: 'fiatTicker', type: 'bytes' }],
        name: 'queryStableTokenContractNames',
        outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
];
function newStableTokenRegistry(web3, address) {
    return new web3.eth.Contract(exports.ABI, address);
}
exports.newStableTokenRegistry = newStableTokenRegistry;
//# sourceMappingURL=StableTokenRegistry.js.map