import { Address } from '@celo/base/lib/address';
import { Connection } from '@celo/connect';
import { CeloContract } from './base';
export declare const REGISTRY_CONTRACT_ADDRESS = "0x000000000000000000000000000000000000ce10";
export declare class UnregisteredError extends Error {
    constructor(contract: CeloContract);
}
/**
 * Celo Core Contract's Address Registry
 *
 * @param connection â€“ an instance of @celo/connect {@link Connection}
 */
export declare class AddressRegistry {
    readonly connection: Connection;
    private readonly registry;
    private readonly cache;
    constructor(connection: Connection);
    /**
     * Get the address for a `CeloContract`
     */
    addressFor(contract: CeloContract): Promise<Address>;
    /**
     * Get the address mapping for known registered contracts
     */
    addressMapping(): Promise<Map<CeloContract, string>>;
}
